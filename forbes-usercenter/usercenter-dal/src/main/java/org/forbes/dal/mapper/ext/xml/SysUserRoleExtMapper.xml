<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.forbes.dal.mapper.ext.SysUserRoleExtMapper" >
    <resultMap id="BaseResultMap" type="org.forbes.comm.vo.UserAndRoleVo" extends="org.forbes.dal.mapper.SysUserRoleMapper.BaseResultMap">
    </resultMap>
    <sql id="Base_Column_List" >
        <include refid="org.forbes.dal.mapper.SysUserRoleMapper.Base_Column_List" />
    </sql>

    <!--用户角色中间表添加-->
    <insert id="addUserAndRole" parameterType="org.forbes.dal.entity.SysUserRole">
        INSERT INTO f_sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <!--根据用户id，角色id删除用户角色中间表-->
    <delete id="deleteUserAndRole" parameterType="long">
        DELETE FROM f_sys_user_role WHERE user_id=#{userId,jdbcType=BIGINT} AND role_id=#{roleId,jdbcType=BIGINT}
    </delete>

    <!--根据用户的id查询用户角色中间表集合-->
    <select id="selectUserRoleListByUserId" parameterType="long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM f_sys_user_role AS fsur WHERE fsur.user_id=#{userId,jdbcType=BIGINT}
    </select>

    <!--查询用户所没有的角色-->
    <select id="selectUserNotRole" parameterType="long" resultType="org.forbes.comm.vo.RoleVo">
       SELECT
       id,
       create_by,
       create_time,
       update_by,
       update_time,
       role_name,
       role_code,
       description
       FROM f_sys_role AS fsr WHERE fsr.id NOT IN (SELECT fsur.role_id FROM f_sys_user_role AS fsur WHERE fsur.user_id=#{userId,jdbcType=BIGINT})
    </select>

    <!--批量删除用户角色中间表-->
    <delete id="batchDelUserRole" >
        DELETE FROM f_sys_user_role  WHERE user_id=#{userId,jdbcType=BIGINT} AND role_id IN
        <foreach item="roleId" collection="roleIdArray" open="(" separator="," close=")">
            #{roleId,jdbcType=BIGINT}
        </foreach>

    </delete>

    <!--批量添加-->
    <insert id="batchAddUserAndRole" parameterType="java.util.List">
        INSERT INTO f_sys_user_role (create_time,user_id,role_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.userId,jdbcType=BIGINT},
            #{item.roleId,jdbcType=BIGINT}
            )
        </foreach>

    </insert>
</mapper>