<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.forbes.dal.mapper.ext.SysRolePermissionExtMapper" >
  <resultMap id="BaseResultMap" type="org.forbes.dal.entity.SysRolePermission" extends="org.forbes.dal.mapper.SysRolePermissionMapper.BaseResultMap">
  </resultMap>
  <sql id="Base_Column_List" >
   <include refid="org.forbes.dal.mapper.SysRolePermissionMapper.Base_Column_List" />
  </sql>

    <!--通过角色id查询一个角色的所有权限-->
    <select id="getPermissionByRoleId" resultType="org.forbes.comm.vo.SysRolePermissionVo">
       SELECT
              r.id,
			  r.role_name,
              GROUP_CONCAT(p.name) as name,
              GROUP_CONCAT(p.description) as description
        FROM f_sys_role_permission rp JOIN f_sys_role r
        ON rp.role_id = r.id JOIN f_sys_permission p ON
        rp.permission_id = p.id
        WHERE r.id =#{roleId}
    </select>

    <!--通过角色名称查询一个角色的所有权限-->
    <select id="getPermissionByRoleName" resultType="org.forbes.comm.vo.SysRolePermissionVo">
        SELECT
        p.id,
        GROUP_CONCAT(p.name) as name,
        GROUP_CONCAT(p.description) as description,
        r.role_name
        FROM f_sys_role_permission rp JOIN f_sys_role r
        ON rp.role_id = r.id JOIN f_sys_permission p ON
        rp.permission_id = p.id
        WHERE r.role_name =#{roleName}
    </select>
    <!--查询所有角色与其对应的所有权限-->
    <select id="getPermissionByRole" resultType="org.forbes.comm.vo.SysRolePermissionVo">
        SELECT
        GROUP_CONCAT(p.id) as id,
        GROUP_CONCAT(p.name) as name,
        GROUP_CONCAT(p.description)as description,
        GROUP_CONCAT(r.role_name) as role_name
        FROM f_sys_permission p
        JOIN f_sys_role_permission rp
        ON rp.permission_id = p.id JOIN f_sys_role r
        ON rp.role_id = r.id
    </select>

    <!--查询一个角色拥有的权限-->
    <select id="getPermissionInRole" resultType="org.forbes.comm.vo.PermissionInRoleVo">
       SELECT
        p.id,
        p.name,
        p.description
       FROM f_sys_permission p
       WHERE p.id IN (SELECT rp.permission_id FROM f_sys_role_permission rp WHERE rp.role_id=#{roleId,jdbcType=BIGINT})
</select>

    <!--
        SELECT
              rp.id,
			  rp.permission_id,
			  rp.role_id,
			  p.id,
			  p.`name`
        FROM f_sys_role_permission rp JOIN f_sys_permission p on rp.permission_id=p.id
        WHERE rp.role_id =#{roleId,jdbcType=BIGINT}
       -->

    <!--查询一个角色未拥有的权限-->
    <select id="getPermissionNotInRole" resultType="org.forbes.comm.vo.PermissionInRoleVo">
      SELECT
        p.id,
        p.name,
        p.description
      FROM f_sys_permission p
      WHERE p.id NOT IN (SELECT rp.permission_id FROM f_sys_role_permission rp WHERE rp.role_id=#{roleId,jdbcType=BIGINT})
    </select>

    <!--给一个角色添加权限-->
    <insert id="addPermissionToRole" parameterType="org.forbes.comm.model.AddPermissionToRoleDto">
        INSERT INTO f_sys_role_permission
        (role_id,permission_id)
        VALUES (#{roleId,jdbcType=BIGINT},#{permissionId,jdbcType=BIGINT})
    </insert>

    <!--修改角色的一个权限(中间表)-->
    <update id="updatePermissionToRole" parameterType="org.forbes.comm.model.UpdatePermissionToRoleDto">
        UPDATE f_sys_role_permission
        SET permission_id = #{permissionId,jdbcType=BIGINT}
        WHERE role_id = #{roleId,jdbcType=BIGINT} AND id = #{id,jdbcType=BIGINT}
    </update>
    <!--删除角色的一个权限(中间表)-->
    <delete id="deletePermissionToRole" parameterType="org.forbes.comm.model.DeletePermissionToRoleDto">
        DELETE FROM f_sys_role_permission
        WHERE role_id = #{roleId,jdbcType=BIGINT} AND permission_id = #{permissionId,jdbcType=BIGINT}
    </delete>

    <!--修改角色的一个权限(中间表)-->
    <update id="updateRolePermissionById">
        UPDATE f_sys_role_permission
        SET permission_id = #{permissionId,jdbcType=BIGINT}
        WHERE role_id = #{roleId,jdbcType=BIGINT} AND id = #{id,jdbcType=BIGINT}
    </update>
</mapper>